{"version":3,"sources":["Pages/LoginPage/LoginPage.module.css","Pages/LoginPage/LoginPage.jsx","Components/FormItems/FormItems.jsx","Components/SubmitButton/SubmitButton.jsx","utils/validationSchema.js","utils/formikOptions.js","Components/FormItems/FormItems.module.css","Components/SubmitButton/SubmitButton.module.css"],"names":["module","exports","LoginPage","useLoginMutation","loginUser","isLoading","dispatch","useDispatch","postLogin","data","setToken","token","isLogin","className","css","container","schema","loginSchema","onSubmit","event","then","catch","e","toast","error","initValues","email","password","inputTags","loginFormOptions","label","FormItems","children","onError","debounce","initialValues","validationSchema","errors","touched","form","map","el","htmlFor","id","type","input","name","placeholder","SubmitButton","width","button","disabled","style","color","height","timeout","contactSchema","Yup","shape","min","max","required","number","phone","signupSchema","contactFormOptions","modalFormOptions","signupOptions"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,UAAY,+B,oJCsCfC,UA7BG,WAChB,MAAmCC,cAAnC,mBAAOC,EAAP,KAAoBC,EAApB,KAAoBA,UACdC,EAAWC,cAEjB,SAASC,EAAT,GAA8B,IAATC,EAAQ,EAARA,KACnBH,EAASI,YAASD,EAAKE,QACvBL,EAASM,aAAQ,IASnB,OACE,qBAAKC,UAAWC,IAAIC,UAApB,SACE,cAAC,IAAD,CACEC,OAAQC,IACRC,SAVN,SAAsBC,GACpBf,EAAU,eAAKe,IACZC,KAAKZ,GACLa,OAAM,SAAAC,GAAC,OAAIC,IAAMC,MAAM,+BAQtBC,WAAY,CAAEC,MAAO,GAAIC,SAAU,IACnCC,UAAWC,IAJb,SAME,cAAC,IAAD,CAAcxB,UAAWA,EAAWyB,MAAO,gB,gCCjCnD,wFAMaC,EAAY,SAAC,GAMnB,IALLf,EAKI,EALJA,OACAE,EAII,EAJJA,SACAc,EAGI,EAHJA,SACAP,EAEI,EAFJA,WACAG,EACI,EADJA,UAEMK,EAAUC,YAAS,KAAK,SAAAV,GAC5BD,IAAMC,MAAMA,MAGd,OACE,cAAC,IAAD,CACEW,cAAeV,EACfW,iBAAkBpB,EAClBE,SAAUA,EAHZ,SAKG,gBAAGmB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,eAAC,IAAD,CAAMzB,UAAWC,IAAIyB,KAArB,UACGX,EAAUY,KAAI,SAAAC,GACb,OACE,wBAAO5B,UAAWC,IAAIgB,MAAOY,QAASD,EAAGE,GAAzC,UACGF,EAAGX,MACJ,cAAC,IAAD,CACEc,KAAMH,EAAGG,KACT/B,UAAWC,IAAI+B,MACfF,GAAIF,EAAGE,GACPG,KAAML,EAAGE,GACTI,YAAW,gBAAWN,EAAGX,SAE1BQ,EAAQG,EAAGE,KAAON,EAAOI,EAAGE,KAAOV,EAAQI,EAAOI,EAAGE,OATNF,EAAGE,OAaxDX,U,gCCxCX,+EAIagB,EAAe,SAAC,GAA0C,IAAxC3C,EAAuC,EAAvCA,UAAWyB,EAA4B,EAA5BA,MAA4B,IAArBmB,aAAqB,MAAb,OAAa,EACpE,OACE,wBACEpC,UAAWC,IAAIoC,OACfN,KAAK,SACLO,SAAU9C,EACV+C,MAAO,CACLH,SALJ,SAQG5C,EACC,cAAC,IAAD,CACEuC,KAAK,WACLS,MAAM,OACNC,OAAQ,GACRL,MAAO,GACPM,QAAS,MANH,UASLzB,O,gCCvBX,kHAGa0B,GAHb,OAG6BC,WAAaC,MAAM,CAC9CZ,KAAMW,WAAaE,IAAI,GAAGC,IAAI,IAAIC,WAClCC,OAAQL,WAAaM,MAAM,IAAI,GAAOF,cAG3B5C,EAAcwC,WAAaC,MAAM,CAC5ChC,MAAO+B,WAAa/B,QACpBC,SAAU8B,WAAaE,IAAI,GAAGC,IAAI,MAGvBI,EAAeP,WAAaC,MAAM,CAC7CZ,KAAMW,WAAaE,IAAI,GAAGC,IAAI,IAC9BlC,MAAO+B,WAAa/B,QACpBC,SAAU8B,WAAaE,IAAI,GAAGC,IAAI,O,gCChBpC,wIAAO,IAAMK,EAAqB,CAChC,CACErB,KAAM,OACNd,MAAO,OACPa,GAAI,QAEN,CACEC,KAAM,MACNd,MAAO,QACPa,GAAI,WAIKuB,EAAmB,CAC9B,CACEtB,KAAM,OACNd,MAAO,OACPa,GAAI,QAEN,CACEC,KAAM,MACNd,MAAO,QACPa,GAAI,WAIKd,EAAmB,CAC9B,CACEe,KAAM,QACNd,MAAO,QACPa,GAAI,SAEN,CACEC,KAAM,WACNd,MAAO,WACPa,GAAI,aAIKwB,EAAgB,CAC3B,CACEvB,KAAM,OACNd,MAAO,OACPa,GAAI,QAEN,CACEC,KAAM,QACNd,MAAO,QACPa,GAAI,SAEN,CACEC,KAAM,WACNd,MAAO,WACPa,GAAI,c,mBCpDR3C,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,MAAQ,iD,mBCA1FD,EAAOC,QAAU,CAAC,OAAS","file":"static/js/5.58246b3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginPage_container__1nP1z\"};","import { FormItems } from 'Components/FormItems/FormItems';\r\nimport { SubmitButton } from 'Components/SubmitButton/SubmitButton';\r\nimport css from './LoginPage.module.css';\r\nimport { useLoginMutation } from 'redux/authServise';\r\nimport { useDispatch } from 'react-redux';\r\nimport { isLogin, setToken } from 'redux/actions';\r\nimport { toast } from 'react-hot-toast';\r\nimport { loginSchema } from 'utils/validationSchema';\r\nimport { loginFormOptions } from 'utils/formikOptions';\r\n\r\nconst LoginPage = () => {\r\n  const [loginUser, { isLoading }] = useLoginMutation();\r\n  const dispatch = useDispatch();\r\n\r\n  function postLogin({ data }) {\r\n    dispatch(setToken(data.token));\r\n    dispatch(isLogin(true));\r\n  }\r\n\r\n  function loginHandler(event) {\r\n    loginUser({ ...event })\r\n      .then(postLogin)\r\n      .catch(e => toast.error('Wrong login or password'));\r\n  }\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <FormItems\r\n        schema={loginSchema}\r\n        onSubmit={loginHandler}\r\n        initValues={{ email: '', password: '' }}\r\n        inputTags={loginFormOptions}\r\n      >\r\n        <SubmitButton isLoading={isLoading} label={'Login'} />\r\n      </FormItems>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;","import { Formik, Form, Field } from 'formik';\r\nimport { debounce } from 'throttle-debounce';\r\nimport { toast } from 'react-hot-toast';\r\nimport PropTypes from 'prop-types';\r\nimport css from './FormItems.module.css';\r\n\r\nexport const FormItems = ({\r\n  schema,\r\n  onSubmit,\r\n  children,\r\n  initValues,\r\n  inputTags,\r\n}) => {\r\n  const onError = debounce(500, error => {\r\n    toast.error(error);\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initValues}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <Form className={css.form}>\r\n          {inputTags.map(el => {\r\n            return (\r\n              <label className={css.label} htmlFor={el.id} key={el.id}>\r\n                {el.label}\r\n                <Field\r\n                  type={el.type}\r\n                  className={css.input}\r\n                  id={el.id}\r\n                  name={el.id}\r\n                  placeholder={`Enter ${el.label}`}\r\n                />\r\n                {touched[el.id] && errors[el.id] && onError(errors[el.id])}\r\n              </label>\r\n            );\r\n          })}\r\n          {children}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nFormItems.propTypes = {\r\n  schema: PropTypes.object.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n  initValues: PropTypes.objectOf(PropTypes.string.isRequired),\r\n  inputTags: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n};","import Loader from 'react-loader-spinner';\r\nimport css from './SubmitButton.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const SubmitButton = ({ isLoading, label, width = '70px' }) => {\r\n  return (\r\n    <button\r\n      className={css.button}\r\n      type=\"submit\"\r\n      disabled={isLoading}\r\n      style={{\r\n        width,\r\n      }}\r\n    >\r\n      {isLoading ? (\r\n        <Loader\r\n          type=\"TailSpin\"\r\n          color=\"#fff\"\r\n          height={12}\r\n          width={12}\r\n          timeout={3000}\r\n        />\r\n      ) : (\r\n        `${label}`\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nSubmitButton.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n};","import * as Yup from 'yup';\nimport 'yup-phone';\n\nexport const contactSchema = Yup.object().shape({\n  name: Yup.string().min(2).max(20).required(),\n  number: Yup.string().phone('', false).required(),\n});\n\nexport const loginSchema = Yup.object().shape({\n  email: Yup.string().email(),\n  password: Yup.string().min(7).max(20),\n});\n\nexport const signupSchema = Yup.object().shape({\n  name: Yup.string().min(2).max(20),\n  email: Yup.string().email(),\n  password: Yup.string().min(7).max(20),\n});\n","export const contactFormOptions = [\n  {\n    type: 'text',\n    label: 'Name',\n    id: 'name',\n  },\n  {\n    type: 'tel',\n    label: 'Phone',\n    id: 'number',\n  },\n];\n\nexport const modalFormOptions = [\n  {\n    type: 'text',\n    label: 'Name',\n    id: 'name',\n  },\n  {\n    type: 'tel',\n    label: 'Phone',\n    id: 'number',\n  },\n];\n\nexport const loginFormOptions = [\n  {\n    type: 'email',\n    label: 'Email',\n    id: 'email',\n  },\n  {\n    type: 'password',\n    label: 'Password',\n    id: 'password',\n  },\n];\n\nexport const signupOptions = [\n  {\n    type: 'text',\n    label: 'Name',\n    id: 'name',\n  },\n  {\n    type: 'email',\n    label: 'Email',\n    id: 'email',\n  },\n  {\n    type: 'password',\n    label: 'Password',\n    id: 'password',\n  },\n];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormItems_form__3RDBJ\",\"label\":\"FormItems_label__3wOWQ\",\"input\":\"FormItems_input__C-RDv composes_input__Ixcv3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SubmitButton_button__39jTg composes_button__5hfNW\"};"],"sourceRoot":""}