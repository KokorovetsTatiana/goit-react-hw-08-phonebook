{"version":3,"sources":["Pages/SignupPage/SignupPage.module.css","Pages/SignupPage/SignupPage.jsx","Components/FormItems/FormItems.jsx","Components/SubmitButton/SubmitButton.jsx","utils/validationSchema.js","utils/formikOptions.js","Components/FormItems/FormItems.module.css","Components/SubmitButton/SubmitButton.module.css"],"names":["module","exports","SignupPage","useSignupMutation","signupUser","isLoading","dispatch","useDispatch","postSubmit","data","setToken","token","isLogin","className","css","container","schema","signupSchema","onSubmit","event","actions","then","catch","error","toast","resetForm","initValues","name","email","password","inputTags","signupOptions","label","FormItems","children","onError","debounce","initialValues","validationSchema","errors","touched","form","map","el","htmlFor","id","type","input","placeholder","SubmitButton","width","button","disabled","style","color","height","timeout","contactSchema","Yup","shape","min","max","required","number","phone","loginSchema","contactFormOptions","modalFormOptions","loginFormOptions"],"mappings":"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","file":"static/js/6.11fc0b8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SignupPage_container__wyfss\"};","import css from './SignupPage.module.css';\r\nimport { SubmitButton } from 'Components/SubmitButton/SubmitButton';\r\nimport { FormItems } from 'Components/FormItems/FormItems';\r\nimport toast from 'react-hot-toast';\r\nimport { signupSchema } from 'utils/validationSchema';\r\nimport { signupOptions } from 'utils/formikOptions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { isLogin, setToken } from 'redux/actions';\r\nimport { useSignupMutation } from 'redux/authServise';\r\n\r\nconst SignupPage = () => {\r\n  const [signupUser, { isLoading }] = useSignupMutation();\r\n  const dispatch = useDispatch();\r\n\r\n  function postSubmit({ data }) {\r\n    dispatch(setToken(data.token)); //set token in local storage\r\n    dispatch(isLogin(true));\r\n  }\r\n\r\n  function submitHandler(event, actions) {\r\n    signupUser({ ...event })\r\n      .then(postSubmit)\r\n      .catch(error => toast.error('This e-mail already signed up'));\r\n    actions.resetForm();\r\n  }\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <FormItems\r\n        schema={signupSchema}\r\n        onSubmit={submitHandler}\r\n        initValues={{ name: '', email: '', password: '' }}\r\n        inputTags={signupOptions}\r\n      >\r\n        <SubmitButton isLoading={isLoading} label={'Signup'} />\r\n      </FormItems>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupPage;","import { Formik, Form, Field } from 'formik';\r\nimport { debounce } from 'throttle-debounce';\r\nimport { toast } from 'react-hot-toast';\r\nimport PropTypes from 'prop-types';\r\nimport css from './FormItems.module.css';\r\n\r\nexport const FormItems = ({\r\n  schema,\r\n  onSubmit,\r\n  children,\r\n  initValues,\r\n  inputTags,\r\n}) => {\r\n  const onError = debounce(500, error => {\r\n    toast.error(error);\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initValues}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <Form className={css.form}>\r\n          {inputTags.map(el => {\r\n            return (\r\n              <label className={css.label} htmlFor={el.id} key={el.id}>\r\n                {el.label}\r\n                <Field\r\n                  type={el.type}\r\n                  className={css.input}\r\n                  id={el.id}\r\n                  name={el.id}\r\n                  placeholder={`Enter ${el.label}`}\r\n                />\r\n                {touched[el.id] && errors[el.id] && onError(errors[el.id])}\r\n              </label>\r\n            );\r\n          })}\r\n          {children}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nFormItems.propTypes = {\r\n  schema: PropTypes.object.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n  initValues: PropTypes.objectOf(PropTypes.string.isRequired),\r\n  inputTags: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n};","import Loader from 'react-loader-spinner';\r\nimport css from './SubmitButton.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const SubmitButton = ({ isLoading, label, width = '70px' }) => {\r\n  return (\r\n    <button\r\n      className={css.button}\r\n      type=\"submit\"\r\n      disabled={isLoading}\r\n      style={{\r\n        width,\r\n      }}\r\n    >\r\n      {isLoading ? (\r\n        <Loader\r\n          type=\"TailSpin\"\r\n          color=\"#fff\"\r\n          height={12}\r\n          width={12}\r\n          timeout={3000}\r\n        />\r\n      ) : (\r\n        `${label}`\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nSubmitButton.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n};","import * as Yup from 'yup';\nimport 'yup-phone';\n\nexport const contactSchema = Yup.object().shape({\n  name: Yup.string().min(2).max(20).required(),\n  number: Yup.string().phone('', false).required(),\n});\n\nexport const loginSchema = Yup.object().shape({\n  email: Yup.string().email(),\n  password: Yup.string().min(7).max(20),\n});\n\nexport const signupSchema = Yup.object().shape({\n  name: Yup.string().min(2).max(20),\n  email: Yup.string().email(),\n  password: Yup.string().min(7).max(20),\n});\n","export const contactFormOptions = [\n  {\n    type: 'text',\n    label: 'Name',\n    id: 'name',\n  },\n  {\n    type: 'tel',\n    label: 'Phone',\n    id: 'number',\n  },\n];\n\nexport const modalFormOptions = [\n  {\n    type: 'text',\n    label: 'Name',\n    id: 'name',\n  },\n  {\n    type: 'tel',\n    label: 'Phone',\n    id: 'number',\n  },\n];\n\nexport const loginFormOptions = [\n  {\n    type: 'email',\n    label: 'Email',\n    id: 'email',\n  },\n  {\n    type: 'password',\n    label: 'Password',\n    id: 'password',\n  },\n];\n\nexport const signupOptions = [\n  {\n    type: 'text',\n    label: 'Name',\n    id: 'name',\n  },\n  {\n    type: 'email',\n    label: 'Email',\n    id: 'email',\n  },\n  {\n    type: 'password',\n    label: 'Password',\n    id: 'password',\n  },\n];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormItems_form__3RDBJ\",\"label\":\"FormItems_label__3wOWQ\",\"input\":\"FormItems_input__C-RDv composes_input__Ixcv3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SubmitButton_button__39jTg composes_button__5hfNW\"};"],"sourceRoot":""}