{"version":3,"sources":["Components/AddContactForm/AddContactForm.module.css","Components/ContactList/ContactList.module.css","Components/ContactListItem/ContactListItem.module.css","Components/EditModal/EditModal.module.css","Components/FindForm/FindForm.module.css","Pages/PhonebookPage/Phonebook.module.css","utils/hasName.js","Components/AddContactForm/AddContactForm.jsx","Components/ContactListItem/ContactListItem.jsx","Components/EditModal/EditModal.jsx","Components/ContactList/ContactList.jsx","utils/getFilteredContacts.js","Components/FindForm/FindForm.jsx","Pages/PhonebookPage/Phonebook.jsx","Components/FormItems/FormItems.jsx","Components/SubmitButton/SubmitButton.jsx","utils/validationSchema.js","utils/formikOptions.js","Components/FormItems/FormItems.module.css","Components/SubmitButton/SubmitButton.module.css"],"names":["module","exports","hasName","name","contacts","map","el","includes","AddContactForm","data","useGetContactQuery","refetch","useCurrentQuery","useAddContactMutation","addContact","isLoading","useEffect","className","css","header","FormItems","schema","contactSchema","onSubmit","event","actions","toast","error","then","success","catch","status","resetForm","initValues","number","inputTags","contactFormOptions","SubmitButton","label","width","ContactListItem","id","contact","editButtonHandler","useDeleteContactMutation","deleteContact","listItem","type","button","onClick","size","buttonFetching","icon","GoTrashcan","color","disabled","height","EditModal","usePacthContactMutation","editContact","dispatch","useDispatch","closeButtonHandler","isOpen","createPortal","backdrop","modal","cross","e","modalFormOptions","document","getElementById","ContactList","string","isFetching","filterValue","useSelector","getFilterValue","fitredContacts","filter","toLowerCase","isOpenModal","s","useState","modalData","setModalData","LinearProgress","style","marginTop","list","FindForm","value","input","onChange","changeFilter","target","placeholder","Phonebook","container","children","onError","debounce","initialValues","validationSchema","errors","touched","form","htmlFor","timeout","Yup","shape","min","max","required","phone","loginSchema","email","password","signupSchema","loginFormOptions","signupOptions"],"mappings":"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","file":"static/js/4.60f2de04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AddContactForm_header__1wAQU composes_header__18o3v\",\"form\":\"AddContactForm_form__ZuJQP\",\"input\":\"AddContactForm_input__KJXyc composes_input__Ixcv3\",\"label\":\"AddContactForm_label__3kOC5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ContactList_header__1e9hs composes_header__18o3v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__2-KeS\",\"button\":\"ContactListItem_button__3tnug composes_button__5hfNW\",\"buttonFetching\":\"ContactListItem_buttonFetching__3ya48 composes_button__5hfNW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"EditModal_backdrop__-ScW5\",\"modal\":\"EditModal_modal__2Ad3q\",\"cross\":\"EditModal_cross__mbi4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"FindForm_header__3eMas composes_header__18o3v\",\"input\":\"FindForm_input__1Njfh composes_input__Ixcv3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__YkG8D\"};","export const hasName = (name, contacts) => {\n  const contactNames = contacts.map(el => el.name);\n  return contactNames.includes(name);\n};\n","import css from './AddContactForm.module.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport { FormItems } from 'Components/FormItems/FormItems';\r\nimport { SubmitButton } from 'Components/SubmitButton/SubmitButton';\r\nimport { contactSchema } from 'utils/validationSchema';\r\nimport { hasName } from 'utils/hasName';\r\nimport { contactFormOptions } from 'utils/formikOptions';\r\nimport { toast } from 'react-hot-toast';\r\nimport { useEffect } from 'react';\r\nimport {\r\n  useAddContactMutation,\r\n  useGetContactQuery,\r\n} from 'redux/contactApiService';\r\nimport { useCurrentQuery } from 'redux/authServise';\r\n\r\nconst AddContactForm = () => {\r\n  const { data } = useGetContactQuery();\r\n  const { refetch } = useCurrentQuery();\r\n  const [addContact, { isLoading }] = useAddContactMutation();\r\n\r\n  useEffect(() => {\r\n    refetch(); //re-fetch user name of userBar component\r\n  }, [data, refetch]);\r\n\r\n  function onSubmit(event, actions) {\r\n    if (hasName(event.name, data)) {\r\n      toast.error('Contact already exists');\r\n    } else {\r\n      addContact({\r\n        ...event,\r\n      })\r\n        .then(toast.success('Added'))\r\n        .catch(error =>\r\n          toast.error(\r\n            `Error ${error.status}, message ${error.data}`,\r\n          ),\r\n        );\r\n    }\r\n    actions.resetForm();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 className={css.header}>Phonebook</h1>\r\n      <FormItems\r\n        schema={contactSchema}\r\n        onSubmit={onSubmit}\r\n        initValues={{ name: '', number: '' }}\r\n        inputTags={contactFormOptions}\r\n      >\r\n        <SubmitButton label={'add'} isLoading={isLoading} width={'45px'} />\r\n      </FormItems>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddContactForm;","import css from './ContactListItem.module.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport { GoTrashcan } from 'react-icons/go';\r\nimport { GoPencil } from 'react-icons/go';\r\nimport Loader from 'react-loader-spinner';\r\nimport toast from 'react-hot-toast';\r\nimport PropTypes from 'prop-types';\r\nimport { useDeleteContactMutation } from 'redux/contactApiService';\r\n\r\nexport const ContactListItem = ({ contact, editButtonHandler }) => {\r\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\r\n\r\n  const hangleContactDelete = id => () => {\r\n    return deleteContact(id)\r\n      .then(\r\n        toast.success('Deleted', {\r\n          icon: GoTrashcan({ color: 'rgb(245, 210, 13)', size: '20' }),\r\n        }),\r\n      )\r\n      .catch(error =>\r\n        toast.error(`Error ${error.status}, message ${error.data}`),\r\n      );\r\n  };\r\n\r\n  return (\r\n    <li className={css.listItem}>\r\n      <span>{contact.name}</span>\r\n      <span>{contact.number}</span>\r\n      <button\r\n        type=\"button\"\r\n        className={css.button}\r\n        onClick={editButtonHandler(contact)}\r\n      >\r\n        edit <GoPencil size=\"16\" />\r\n      </button>\r\n      <button\r\n        className={isLoading ? css.buttonFetching : css.button}\r\n        type=\"button\"\r\n        onClick={hangleContactDelete(contact.id)}\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? (\r\n          <Loader type=\"TailSpin\" color=\"#fff\" height={12} width={12} />\r\n        ) : (\r\n          <>\r\n            delete <GoTrashcan size=\"16\" />\r\n          </>\r\n        )}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.isRequired,\r\n  }),\r\n  editButtonHandler: PropTypes.func.isRequired,\r\n};","import { AiOutlineClose } from 'react-icons/ai';\r\nimport { FormItems } from 'Components/FormItems/FormItems';\r\nimport { SubmitButton } from 'Components/SubmitButton/SubmitButton';\r\nimport css from './EditModal.module.css';\r\nimport { contactSchema } from 'utils/validationSchema';\r\nimport { hasName } from 'utils/hasName';\r\nimport PropTypes from 'prop-types';\r\nimport { modalFormOptions } from 'utils/formikOptions';\r\nimport toast from 'react-hot-toast';\r\nimport { useDispatch } from 'react-redux';\r\nimport { isOpen } from 'redux/actions';\r\nimport {\r\n  usePacthContactMutation,\r\n  useGetContactQuery,\r\n} from 'redux/contactApiService';\r\nimport { createPortal } from 'react-dom';\r\n\r\nexport const EditModal = ({ data }) => {\r\n  const { data: contacts } = useGetContactQuery();\r\n  const [editContact] = usePacthContactMutation();\r\n  const dispatch = useDispatch();\r\n  const { name, number, id } = data; //data from list item, where click on 'edit' button\r\n\r\n  function closeButtonHandler() {\r\n    dispatch(isOpen());\r\n    toast.success('Updated');\r\n  }\r\n\r\n  const onSubmitHandler = (event, actions) => {\r\n    if (hasName(event.name, contacts)) {\r\n      toast.error('This contact already exists');\r\n    } else {\r\n      editContact({ event, id })\r\n        .then(closeButtonHandler)\r\n        .catch(e => toast.error('Contact has not been updated'));\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={css.backdrop}>\r\n      <div className={css.modal}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={closeButtonHandler}\r\n          className={css.cross}\r\n        >\r\n          <AiOutlineClose size=\"16\" />\r\n        </button>\r\n        <FormItems\r\n          schema={contactSchema}\r\n          onSubmit={onSubmitHandler}\r\n          initValues={{ name, number }}\r\n          inputTags={modalFormOptions}\r\n        >\r\n          <SubmitButton label={'edit'} width={'45px'} />\r\n        </FormItems>\r\n      </div>\r\n    </div>,\r\n    document.getElementById('root-modal'),\r\n  );\r\n};\r\n\r\nEditModal.propTypes = {\r\n  data: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n  }),\r\n};","import css from './ContactList.module.css';\r\nimport { LinearProgress } from '@material-ui/core';\r\nimport { ContactListItem } from 'Components/ContactListItem/ContactListItem';\r\nimport { EditModal } from 'Components/EditModal/EditModal';\r\nimport { getFilteredContacts } from 'utils/getFilteredContacts';\r\nimport toast from 'react-hot-toast';\r\nimport { useEffect, useState } from 'react';\r\nimport { getFilterValue } from 'redux/selectors';\r\nimport { useGetContactQuery } from 'redux/contactApiService';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { isOpen } from 'redux/actions';\r\n\r\nconst ContactList = () => {\r\n  const { data, isFetching, error } = useGetContactQuery();\r\n  const filterValue = useSelector(getFilterValue);\r\n  const fitredContacts = getFilteredContacts(data, filterValue);\r\n  const isOpenModal = useSelector(s => s.isOpenModal);\r\n  const dispatch = useDispatch();\r\n  const [modalData, setModalData] = useState('');\r\n\r\n  useEffect(() => {\r\n    error &&\r\n      toast.error(`Error ${error.status}, message ${error.data}`);\r\n  }, [error]); //errors of fetch\r\n\r\n  const editButtonHandler = contact => () => {\r\n    dispatch(isOpen());\r\n    setModalData(contact);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className={css.header}>Your contacts</h2>\r\n      {isFetching && <LinearProgress style={{ marginTop: '20px' }} />}\r\n      <ul className={css.list}>\r\n        {fitredContacts.map(contact => {\r\n          return (\r\n            <ContactListItem\r\n              contact={contact}\r\n              key={contact.id}\r\n              editButtonHandler={editButtonHandler}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n      {isOpenModal && <EditModal data={modalData} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;","export const getFilteredContacts = (contacts, string) => {\n  return contacts\n    ? contacts.filter(el =>\n        el.name.toLowerCase().includes(string.toLowerCase()),\n      )\n    : [];\n};\n","import css from './FindForm.module.css';\r\nimport { changeFilter } from 'redux/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilterValue } from 'redux/selectors';\r\n\r\nconst FindForm = () => {\r\n  const value = useSelector(getFilterValue);\r\n  const dispatch = useDispatch();\r\n\r\n  function onChange(event) {\r\n    dispatch(changeFilter(event.target.value));\r\n  }\r\n  return (\r\n    <>\r\n      <h2 className={css.header}>Find by name</h2>\r\n      <input\r\n        className={css.input}\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        value={value}\r\n        placeholder=\"Type name to find\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FindForm;","import AddContactForm from 'Components/AddContactForm/AddContactForm';\r\nimport ContactList from 'Components/ContactList/ContactList';\r\nimport FindForm from 'Components/FindForm/FindForm';\r\nimport css from './Phonebook.module.css';\r\n\r\nconst Phonebook = () => {\r\n  return (\r\n    <div className={css.container}>\r\n      <AddContactForm />\r\n      <FindForm />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Phonebook;","import { Formik, Form, Field } from 'formik';\r\nimport { debounce } from 'throttle-debounce';\r\nimport { toast } from 'react-hot-toast';\r\nimport PropTypes from 'prop-types';\r\nimport css from './FormItems.module.css';\r\n\r\nexport const FormItems = ({\r\n  schema,\r\n  onSubmit,\r\n  children,\r\n  initValues,\r\n  inputTags,\r\n}) => {\r\n  const onError = debounce(500, error => {\r\n    toast.error(error);\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initValues}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <Form className={css.form}>\r\n          {inputTags.map(el => {\r\n            return (\r\n              <label className={css.label} htmlFor={el.id} key={el.id}>\r\n                {el.label}\r\n                <Field\r\n                  type={el.type}\r\n                  className={css.input}\r\n                  id={el.id}\r\n                  name={el.id}\r\n                  placeholder={`Enter ${el.label}`}\r\n                />\r\n                {touched[el.id] && errors[el.id] && onError(errors[el.id])}\r\n              </label>\r\n            );\r\n          })}\r\n          {children}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nFormItems.propTypes = {\r\n  schema: PropTypes.object.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n  initValues: PropTypes.objectOf(PropTypes.string.isRequired),\r\n  inputTags: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n};","import Loader from 'react-loader-spinner';\r\nimport css from './SubmitButton.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const SubmitButton = ({ isLoading, label, width = '70px' }) => {\r\n  return (\r\n    <button\r\n      className={css.button}\r\n      type=\"submit\"\r\n      disabled={isLoading}\r\n      style={{\r\n        width,\r\n      }}\r\n    >\r\n      {isLoading ? (\r\n        <Loader\r\n          type=\"TailSpin\"\r\n          color=\"#fff\"\r\n          height={12}\r\n          width={12}\r\n          timeout={3000}\r\n        />\r\n      ) : (\r\n        `${label}`\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nSubmitButton.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n};","import * as Yup from 'yup';\nimport 'yup-phone';\n\nexport const contactSchema = Yup.object().shape({\n  name: Yup.string().min(2).max(20).required(),\n  number: Yup.string().phone('', false).required(),\n});\n\nexport const loginSchema = Yup.object().shape({\n  email: Yup.string().email(),\n  password: Yup.string().min(7).max(20),\n});\n\nexport const signupSchema = Yup.object().shape({\n  name: Yup.string().min(2).max(20),\n  email: Yup.string().email(),\n  password: Yup.string().min(7).max(20),\n});\n","export const contactFormOptions = [\n  {\n    type: 'text',\n    label: 'Name',\n    id: 'name',\n  },\n  {\n    type: 'tel',\n    label: 'Phone',\n    id: 'number',\n  },\n];\n\nexport const modalFormOptions = [\n  {\n    type: 'text',\n    label: 'Name',\n    id: 'name',\n  },\n  {\n    type: 'tel',\n    label: 'Phone',\n    id: 'number',\n  },\n];\n\nexport const loginFormOptions = [\n  {\n    type: 'email',\n    label: 'Email',\n    id: 'email',\n  },\n  {\n    type: 'password',\n    label: 'Password',\n    id: 'password',\n  },\n];\n\nexport const signupOptions = [\n  {\n    type: 'text',\n    label: 'Name',\n    id: 'name',\n  },\n  {\n    type: 'email',\n    label: 'Email',\n    id: 'email',\n  },\n  {\n    type: 'password',\n    label: 'Password',\n    id: 'password',\n  },\n];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormItems_form__3RDBJ\",\"label\":\"FormItems_label__3wOWQ\",\"input\":\"FormItems_input__C-RDv composes_input__Ixcv3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SubmitButton_button__39jTg composes_button__5hfNW\"};"],"sourceRoot":""}